version: "3.7"

networks:
  backend:
    driver: ${NETWORKS_DRIVER}

services:

### Redis ################################################
  # master
  redis:
    image: johnson19900110/redis:latest
    restart: always
    volumes:
      - ${DATA_PATH_HOST}/redis/master:/data
      - ./redis/config/redis-master.conf:/usr/local/etc/redis/redis.conf
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - backend

  # slave 1
  redis-slave1:
    image: johnson19900110/redis:latest
    restart: always
    volumes:
      - ${DATA_PATH_HOST}/redis/slave1:/data
      - ./redis/config/redis-slave1.conf:/usr/local/etc/redis/redis.conf
    ports:
      - ${REDIS_SLAVE1_PORT}:6379
    networks:
      - backend
    depends_on:
      - redis

  # slave 2
  redis-slave2:
    image: johnson19900110/redis:latest
    restart: always
    volumes:
      - ${DATA_PATH_HOST}/redis/slave2:/data
      - ./redis/config/redis-slave2.conf:/usr/local/etc/redis/redis.conf
    ports:
      - ${REDIS_SLAVE2_PORT}:6379
    networks:
      - backend
    depends_on:
      - redis
      - redis-slave1


### REDIS-SENTINEL ################################################
  # master
  redis-sentinel:
    image: johnson19900110/redis-sentinel:latest
    restart: always
    volumes:
      - ./redis-sentinel/config/sentinel.conf:/usr/local/etc/redis/redis-sentinel.conf
    networks:
      - backend
    depends_on:
      - redis

  # redis sentinel slave 1
  redis-sentinel-slave1:
    image: johnson19900110/redis-sentinel:latest
    restart: always
    volumes:
      - ./redis-sentinel/config/sentinel-slave1.conf:/usr/local/etc/redis/redis-sentinel.conf
    networks:
      - backend
    depends_on:
      - redis-slave1
      - redis-sentinel

  # redis sentinel slave 2
  redis-sentinel-slave2:
    image: johnson19900110/redis-sentinel:latest
    restart: always
    volumes:
      - ./redis-sentinel/config/sentinel-slave2.conf:/usr/local/etc/redis/redis-sentinel.conf
    networks:
      - backend
    depends_on:
      - redis-slave2
      - redis-sentinel-slave1

### REDIS-CLUSTER ################################################
  redis-cluster:
    build:
      context: ./redis-cluster
    restart: always
    ports:
      - "${MYSQL_CLUSTER_PORT}:7000"
    networks:
      - backend

### MYSQL ########################################################
  mysql:
    #build:
      #context: ./mysql
      #args:
      # - MYSQL_VERSION=${MYSQL_VERSION}
    image: johnson19900110/mysql:latest
    restart: always
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - ${DATA_PATH_HOST}/mysql/${MYSQL_VERSION}:/var/lib/mysqlcd
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - backend

### MYSQL_SPHINX ###################################################
  sphinx:
    build:
      context: ./mysql-sphinx
    #image: johnson19900110/mysql-sphinx:latest
    restart: always
    volumes:
      - ./mysql-sphinx/etc:/etc/sphinx
    ports:
      - "9306:9306"
      - "9312:9312"
    networks:
      - backend

### PHP-FPM ################################################
  php-fpm:
#    build:
#      context: ./php-fpm
#      args:
#        - PHP_VERSION=${PHP_VERSION}
#        - INSTALL_SUPERVISOR=${INSTALL_SUPERVISOR}
#        - INSTALL_SOAP=${PHP_FPM_INSTALL_SOAP}
#        - INSTALL_PGSQL=${PHP_FPM_INSTALL_PGSQL}
#        - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
#        - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
#        - INSTALL_SWOOLE=${PHP_FPM_INSTALL_SWOOLE}
#        - INSTALL_MONGO=${PHP_FPM_INSTALL_MONGO}
#        - INSTALL_AMQP=${PHP_FPM_INSTALL_AMQP}
#        - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}
#        - INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}
#        - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
#        - INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}
#        - INSTALL_TOKENIZER=${PHP_FPM_INSTALL_TOKENIZER}
#        - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
#        - INSTALL_MSSQL=${PHP_FPM_INSTALL_MSSQL}
#        - INSTALL_IMAGE_OPTIMIZERS=${PHP_FPM_INSTALL_IMAGE_OPTIMIZERS}
#        - INSTALL_IMAGEMAGICK=${PHP_FPM_INSTALL_IMAGEMAGICK}
#        - INSTALL_IMAP=${PHP_FPM_INSTALL_IMAP}
#        - INSTALL_PCNTL=${PHP_FPM_INSTALL_PCNTL}
#        - INSTALL_CALENDAR=${PHP_FPM_INSTALL_CALENDAR}
    #image: johnson19900110/php-fpm:7.2-fpm
    image: johnson19900110/php-fpm-maka
    restart: always
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      - ./php-fpm/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
      - ./php-fpm/supervisor/conf.d:/etc/supervisor/conf.d
#    expose:
#      - "9000"
#      - "9502"
#      - "9503"
    ports:
      - "9000"
      - "9501:9501"
      - "9502:9502"
    cap_add:
      - SYS_PTRACE
    networks:
      - backend

### NGINX ################################################
  nginx:
#    build:
#      context: ./nginx
#      args:
#        - NGINX_VERSION=${NGINX_VERSION}
#        - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
#        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
    image: johnson19900110/nginx:latest
    restart: always
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    depends_on:
      - php-fpm
    networks:
      - backend

### INNODB-CLUSTER ##########################################
  innodb-cluster:
    image: johnson19900110/innodb-cluster
    restart: always
    hostname: innodb-cluster
    environment:
      - MYSQL_ROOT_PASSWORD=${INNODB_CLUSTER_ROOT_PASSWORD}
      - GROUP_NAME=${INNODB_CLUSTER_GROUP_NAME}
      - BOOTSTRAP=1
    volumes:
      - ./mysql/innodb-cluster/data/1:/var/lib/mysql

  innodb-cluster-2:
    image: johnson19900110/innodb-cluster
    restart: always
    hostname: innodb-cluster-2
    environment:
      - MYSQL_ROOT_PASSWORD=${INNODB_CLUSTER_ROOT_PASSWORD}
      - GROUP_NAME=${INNODB_CLUSTER_GROUP_NAME}
      - GROUP_SEEDS=innodb-cluster:6606,innodb-cluster-3:6606
    volumes:
      - ./mysql/innodb-cluster/data/2:/var/lib/mysql
    depends_on:
      - innodb-cluster

  innodb-cluster-3:
    image: johnson19900110/innodb-cluster
    restart: always
    hostname: innodb-cluster-3
    environment:
      - MYSQL_ROOT_PASSWORD=${INNODB_CLUSTER_ROOT_PASSWORD}
      - GROUP_NAME=${INNODB_CLUSTER_GROUP_NAME}
      - GROUP_SEEDS=innodb-cluster:6606,innodb-cluster-2:6606
    volumes:
      - ./mysql/innodb-cluster/data/3:/var/lib/mysql
    depends_on:
     - innodb-cluster

  router:
    image: johnson19900110/innodb-cluster
    restart: always
    hostname: router
    ports:
      - "3306:3306"
      - "6606:6606"
      - "6446:6446"
      - "6447:6447"
    volumes:
      - ./mysql/innodb-cluster/data/router:/var/lib/mysqlrouter
    depends_on:
      - innodb-cluster
      - innodb-cluster-2
      - innodb-cluster-3
    environment:
      - NODE_TYPE=router
      - MYSQL_ROOT_PASSWORD=${INNODB_CLUSTER_ROOT_PASSWORD}
      - MYSQL_HOST=innodb-cluster


### ELASTICSEARCH ##########################################
  elasticsearch:
    image: johnson19900110/elasticsearch-ik
#    build:
#      context: ./elasticsearch
#      args:
#        - ES_VERSION=${ES_VERSION}
    restart: always
    volumes:
      - /data/elasticsearch/data:/usr/share/elasticsearch/data
      - /data/elasticsearch/config/analysis-ik/mydict.dic:/usr/share/elasticsearch/config/analysis-ik/custom/mydict.dic
    ports:
      - 9200:9200
    networks:
      - backend


#########
#########
########
#########
#########